RepeatModeler 2.0
=================
  - Many RepeatModeler seed alignments and consensus sequences contained stretches
    of N’s due masking performed by TRF.  Instead of using the masked 
    sequences in the final seed alignment the original genomic sequences 
    are used, preserving low-complexity regions in the final consensus called.
  - The batching system was refactored to improve handling of short input 
    sequences often found in early assemblies or low-coverage genome projects.
  - The interface to TRF was inefficient and a major bottleneck in the 
    RepeatModeler pipeline.  The simple/tandem repeat masking step was refactored 
    to improve performance.
  - Container releases ( Docker and Singularity )
  - Classification improvements:
      o Fixed a bug that caused some TE families to be labeled with the RepeatMasker 
        internal-use label “buffer”.
      o Fixed problem with TRF masking the input sequences that caused some 
        low-complexity sequences incorrectly match TE library sequences.
      o Fixed problem with conflict resolution that often let a lower scoring 
        match define the class for the family.

RepeatModeler 1.0.11
====================
  - Bugfix release. Avoid bailing if Refiner could not produce a consensus 
    from the family sequence set.

RepeatModeler 1.0.10
====================
  - Bugfix release. Fixes a bug that will cause RepeatModeler to exit 
    if no new repeats are detected after round-2. This may happen if the
    sample size is small enough or contains a repeat-poor set of sequences
    and may not reflect the chance that repeats will be found in later rounds.
    Typically new repeats are found in all rounds of RepeatModeler.

RepeatModeler 1.0.9
===================
  - RepeatModeler employs a genome sampling approach that is based
    on a random number generator. In this release of RepeatModeler
    we print out the random number generator seed at the start of 
    a run.  This number can be used with the "-srand ####" flag in future
    runs to exactly reproduce the samples taken from a given database.

  - The final output files are now placed in the same directory as
    the input database.  

  - An additional output file is now generated containing the seed 
    alignment for each discovered family.  This alignment is the source
    of the final consnesus and is stored in a Dfam compatible Stockholm
    file.  The new output files are named <database_name>-families.fa and
    <database_name>-families.stk.
    
  - Support for Dfam_consensus has been built into this release. Two
    utilities dfamConsensusTool.pl and renameIds.pl can be found in the
    RepeatModeler util/ directory.  The dfamConsensusTool script enables
    one to upload curated seed alignments to the open Dfam_consensus 
    database from the command line.  The renameIds script simplifies
    the process of coming up with unique identifiers for a set of 
    RepeatModeler generated families given a naming template.

RepeatModeler 1.0.8
===================
  - New "-recoverDir <dir>" option.  This allows RepeatModeler to 
        restart where it left off after a failure occurs.  
  - BLAST searches can now be run in parallel on a shared memory 
        multiprocessor machine.  The new "-pa #" option is used to
    specify how many parallel searches to start up at any one time.

RepeatModeler 1.0.7
===================
  - Added support for new RMBlastn version 2.2.27
      - TRFMask updated to work with the new RepeatMasker 4.0 release.
          - New viewMSA.pl utility

